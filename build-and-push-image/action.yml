name: Gcloud run deploy

inputs:
  google_project:
    required: true
    description: Google project id
  google_location:
    required: true
    description: Region of artifact registry
  image_name:
    required: true
    description: Name of image
  google_repository_name:
    required: true
    description: Name of image repository
  google_credentials:
    required: true
    description: Google credentials
  github_sha:
    required: true
    description: Commit sha
  github_ref:
    required: true
    description: Ref of commit
  working_directory:
    required: false
    default: .
    description: The directory of the dockerfile
  docker_filename:
    required: false
    default: Dockerfile
    description: Name of the dockerfile

outputs:
  tagged_image_uri:
    description: Uri to the pushed image
    value: ${{ steps.publish.outputs.tagged_image_uri }}

runs:
  using: composite
  steps:
  - name: Setup gcloud CLI
    uses: google-github-actions/setup-gcloud@v0

  - name: 'Authenticate to Google Cloud'
    uses: 'google-github-actions/auth@v0'
    with:
      credentials_json: ${{ inputs.google_credentials }}

  # Configure docker to use the gcloud command-line tool as a credential helper
  - name: Configure docker
    env:
      REGISTRY_HOSTNAME: ${{ inputs.google_location }}-docker.pkg.dev
    shell: bash
    run: gcloud auth configure-docker "$REGISTRY_HOSTNAME" --quiet

  # Build the Docker image
  - name: Build
    env:
      REPOSITORY: ${{ inputs.google_repository_name }}
      IMAGE: ${{ inputs.image_name }}
      REGISTRY_HOSTNAME: ${{ inputs.google_location }}-docker.pkg.dev
      PROJECT_ID: ${{ inputs.google_project }}
    working-directory: ${{ inputs.working_directory }}
    shell: bash
    run: |
        export TAG=`echo $GITHUB_REF | awk -F/ '{print $NF}'`
        echo $TAG
        docker build -f ${{ inputs.docker_filename }} -t "$REGISTRY_HOSTNAME"/"$PROJECT_ID"/"$REPOSITORY"/"$IMAGE":"$TAG" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" .

  # Push the Docker image to Google Container Registry
  - name: Publish
    id: publish
    env:
      REPOSITORY: ${{ inputs.google_repository_name }}
      IMAGE: ${{ inputs.image_name }}
      REGISTRY_HOSTNAME: ${{ inputs.google_location }}-docker.pkg.dev
      PROJECT_ID: ${{ inputs.google_project }}
    shell: bash
    working-directory: ${{ inputs.working_directory }}
    run: |
      export TAG=`echo $GITHUB_REF | awk -F/ '{print $NF}'`
      export TAGGED_IMAGE_URI="$REGISTRY_HOSTNAME"/"$PROJECT_ID"/"$REPOSITORY"/"$IMAGE":"$TAG"
      export LATEST_IMAGE_URI="$REGISTRY_HOSTNAME"/"$PROJECT_ID"/"$REPOSITORY"/"$IMAGE":latest
      docker push $TAGGED_IMAGE_URI
      docker tag $TAGGED_IMAGE_URI $LATEST_IMAGE_URI
      docker push $LATEST_IMAGE_URI
      echo "::set-output name=tagged_image_uri::$TAGGED_IMAGE_URI"

name: Terraform plan
description: Terraform plan

inputs:
  google_credentials:
    required: true
    description: Credentials used to authenticate to google

  working_directory:
    required: false
    default: .
    description: The working directory of the terraform file

  terraform_backend_bucket_name:
    required: true
    description: Name of the google cloud bucket

  google_project:
    required: true
    description: Name of the project

  google_location:
    required: true
    description: Location to deploy services

  terraform_plan_filename:
    required: false
    default: terraform.tfstate
    description: Filename of the tfstate file

  terraform_artifact_name:
    required: false
    default: terraform_plan
    description: Artifact name

runs:
  using: composite

  steps:
    - id: auth
      name: Authenticate to google cloud
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ inputs.google_credentials }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0

    - id: check_bucket
      name: Check if bucket exists
      shell: bash
      run: gsutil ls -p ${{ inputs.google_project }} | grep gs://${{ inputs.terraform_backend_bucket_name }}/ | xargs -I {} echo "::set-output name=bucket_uri::{}"

    - id: create_bucket
      if: contains(steps.check_bucket.outputs.bucket_uri, inputs.terraform_backend_bucket_name) != true
      name: Create terraform storage bucket
      shell: bash
      run: gsutil mb -p ${{ inputs.google_project }} -l ${{ inputs.google_location }} gs://${{ inputs.terraform_backend_bucket_name }}

    - name: Set up terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform init
      shell: bash
      env:
        GOOGLE_CREDENTIALS: ${{ inputs.google_credentials }}
      run: terraform init -backend-config="bucket=${{ inputs.terraform_backend_bucket_name }}"
      working-directory: ${{ inputs.working_directory }}

    - name: Terraform validate
      shell: bash
      run: terraform validate
      working-directory: ${{ inputs.working_directory }}

    - name: Terraform format
      shell: bash
      run: terraform fmt -check
      working-directory: ${{ inputs.working_directory }}

    - name: Terraform plan
      shell: bash
      working-directory: ${{ inputs.working_directory }}
      env:
        GOOGLE_CREDENTIALS: ${{ inputs.google_credentials }}
      run: |
        terraform plan
        terraform plan -o ${{ inputs.terraform_plan_filename }}

    - name: upload terraform plan
      uses: actions/upload-artifact@v2
      with:
        name: ${{ inputs.terraform_plan_artifact_name }}
        path: ${{ inputs.working_directory}}/${{ inputs.terraform_plan_filename }}
